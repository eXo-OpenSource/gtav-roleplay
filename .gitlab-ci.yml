stages:
    - build
    - deploy

build_job:
    image: docker:latest
    stage: build
    tags:
        - linux
        - dind
    script:
        - |
            docker build \
                --build-arg CI_BUILD_REF_NAME="$CI_BUILD_REF_NAME" \
                --build-arg SENTRY_DSN="$SENTRY_DSN" \
                --build-arg SENTRY_ENVIRONMENT="${CI_COMMIT_BRANCH//\//__}" \
                --build-arg SENTRY_RELEASE="${CI_COMMIT_SHA}" \
                -t exo-rp-altv .
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
        - docker tag exo-rp-altv $CI_REGISTRY_IMAGE:latest-$(echo $CI_BUILD_REF_NAME | tr -d /)
        - '[ "$CI_BUILD_REF_NAME" == "master" ] && docker tag exo-rp-altv $CI_REGISTRY_IMAGE:latest'
        - docker push "$CI_REGISTRY_IMAGE"

sentry_job:
    image: getsentry/sentry-cli
    stage: deploy
    tags:
        - linux
        - dind
    script:
        - sentry-cli releases new --project $SENTRY_PROJECT $CI_COMMIT_SHA
        - sentry-cli releases set-commits --auto $CI_COMMIT_SHA
        - sentry-cli releases deploys $CI_COMMIT_SHA new --env ${CI_COMMIT_BRANCH//\//__}
    only:
        - master
        - release/production

deploy_job_develop:
    image: appropriate/curl
    tags:
        - linux
        - dind
    stage: deploy
    script:
        - curl http://$DEPLOYRON_IP:6000/deploy/altv_develop?APISecret=$DEPLOY_API_SECRET_DEVELOP
    only:
      - master

# deploy_job_production:
#     image: appropriate/curl
#     tags:
#         - linux
#         - dind
#     stage: deploy
#     script:
#         - curl http://$DEPLOYRON_IP:6000/deploy/altv_production?APISecret=$DEPLOY_API_SECRET_PRODUCTION
#     only:
#     - release/production
  