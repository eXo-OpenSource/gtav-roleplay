stages:
  - build
  - deploy
  - eclint

variables:
  GIT_SUBMODULE_STRATEGY: recursive

build_job:
  image: docker:latest
  stage: build
  tags:
    - linux
    - dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - |
        docker build -f dockerfiles/server.Dockerfile \
          -t "$CI_REGISTRY_IMAGE/internal/server:latest" .
    - |
        docker build -f dockerfiles/client.Dockerfile \
          -t "$CI_REGISTRY_IMAGE/internal/client:latest" .
    - |
        docker build -f Dockerfile \
          --build-arg CI_REGISTRY_IMAGE="$CI_REGISTRY_IMAGE" \
          --build-arg CI_BUILD_REF_NAME="$CI_BUILD_REF_NAME" \
          --build-arg BASE_CONFIG="$GAMEMODE_CONFIG" \
          --build-arg SENTRY_DSN="$SENTRY_DSN" \
          --build-arg SENTRY_ENVIRONMENT="${CI_COMMIT_BRANCH//\//-}" \
          --build-arg SENTRY_RELEASE="${CI_COMMIT_SHA}" \
          -t "$CI_REGISTRY_IMAGE:latest" .
    - '[ "$CI_BUILD_REF_NAME" == "master" ] && docker push "$CI_REGISTRY_IMAGE"'
    - '[ "$CI_BUILD_REF_NAME" == "master" ] && docker push "$CI_REGISTRY_IMAGE/internal/server"'
    - '[ "$CI_BUILD_REF_NAME" == "master" ] && docker push "$CI_REGISTRY_IMAGE/internal/client"'

#build_cdn_job:
#  image: docker:latest
#  stage: build
#  tags:
#    - linux
#    - dind
#  script:
#    - |
#        docker build -f cdn/Dockerfile \
#          --build-arg CI_BUILD_REF_NAME="$CI_BUILD_REF_NAME" \
#          -t exo-rp-altv-cdn .
#    - docker run --name justpack exo-rp-altv-cdn
#    - docker cp justpack:/opt/altv/cdn_upload/connect.json .
#    - docker cp justpack:/opt/altv/cdn_upload/exov-client.resource .
#    - docker cp justpack:/opt/altv/cdn_upload/mrpd.resource .
#    - docker cp justpack:/opt/altv/cdn_upload/drivingschool.resource .
#    - docker cp justpack:/opt/altv/cdn_upload/cityhall.resource .
#    - docker rm justpack
#  artifacts:
#    paths:
#      - connect.json
#      - "*.resource"
#    expire_in: 1 Week

sentry_job:
  image: getsentry/sentry-cli
  stage: deploy
  tags:
    - linux
    - dind
  script:
    - sentry-cli releases new --project $SENTRY_PROJECT $CI_COMMIT_SHA
    - sentry-cli releases set-commits --auto $CI_COMMIT_SHA
    - sentry-cli releases deploys $CI_COMMIT_SHA new --env ${CI_COMMIT_BRANCH//\//-}
  only:
    - master
    - release/production

deploy_job_develop:
  image: appropriate/curl
  stage: deploy
  needs: ["build_job"]
  tags:
    - linux
    - dind
  script:
    - curl http://$DEPLOYRON_IP:6000/deploy/altv_develop?APISecret=$DEPLOY_API_SECRET_DEVELOP
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://join.v.stivik.de/$CI_COMMIT_REF_NAME
  only:
    - master

#deploy_cdn:
#  image: 
#    name: minio/mc
#    entrypoint: [''] # https://github.com/minio/mc/issues/3362#issuecomment-724249242
#  stage: deploy
#  needs: ["build_cdn_job"]
#  tags:
#    - linux
#    - dind
#  script:
#    - mc alias set exo https://static.exo.cool $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
#    - mc cp connect.json  exo/exov-static/resources/pack/
#    - mc cp *.resource    exo/exov-static/resources/pack/
#  only:
#    - master
#    - release/production

# deploy_job_production:
#     image: appropriate/curl
#     tags:
#         - linux
#         - dind
#     stage: deploy
#     script:
#         - curl http://$DEPLOYRON_IP:6000/deploy/altv_production?APISecret=$DEPLOY_API_SECRET_PRODUCTION
#     only:
#     - release/production
